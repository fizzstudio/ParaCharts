{"version":3,"file":"barTests-CO1Sx6Gt.js","sources":["../../src/stories/tests/barTests.ts"],"sourcesContent":["import { Test, TestRunner, ExpectFunction } from './TestRunner';\nimport { waitFor } from 'storybook/test';\nimport * as shadow from 'shadow-dom-testing-library';\n\nexport default class BarTestRunner extends TestRunner {\n\n  constructor(canvas: any, userEvent: any, expect: ExpectFunction) {\n    super(canvas, userEvent, expect);\n  }\n\n  @Test\n  async keyboardFocus() {\n    const parachart = await this.canvas.findByTestId('para-chart');\n    const application = shadow.getByShadowRole(parachart, 'application');\n    await application.focus();\n    await this.userEvent.keyboard('{ArrowRight}');\n    await this.userEvent.keyboard('{ArrowRight}');\n    const ariaLive = shadow.getByShadowTestId(parachart, 'sr-status');\n    const records = this.manifest.datasets[0]!.series[0]!.records!;\n    for (const {x, y} of records) {\n      let announcement: string | undefined = '';\n      await this.waitFor(() => {\n        announcement = ariaLive.querySelector('div')?.textContent;\n        this.expect(announcement).toContain(`${x}, ${y}`);\n      });\n      await this.userEvent.keyboard('q');\n      await this.waitFor(() => {\n        const updatedAnnouncement = ariaLive.querySelector('div')?.textContent;\n        this.expect(announcement).not.toBe(updatedAnnouncement);\n      });\n      await this.userEvent.keyboard('{ArrowRight}');\n    }\n  }\n\n}\n"],"names":["cov_14bvuec8fe","actualCoverage","BarTestRunner","TestRunner","userEvent","expect","s","canvas","application","shadow.getByShadowRole","parachart","keyboard","ariaLive","shadow","records","shadow.getByShadowTestId","series","y","f","announcement","x","_a","updatedAnnouncement","__decorateClass","Test"],"mappings":"owKAQE,OAAAA,EAAA,UAAA,CAAA,OAAAC,CAAA,EAAAA,CAAAD,keARF,EAM2B,MAAAE,UAAwCC,CAAA,CAAAH,YAAAA,EAAAI,EAAAC,EAAA,CAAAL,IAAAM,EAAA,CAAA,IACzDN,YACR,MAAAO,EAAAH,EAAAC,CAAA,EAGsBL,MAAAA,eAAA,CACpBA,EAAM,EAAA,EAAAA,CAAA,IACN,MAAMQ,GAAAR,IAAA,EAAAM,EAAA,IAAA,MAAc,KAAuB,OAAA,aAAA,eAAwBN,GAAAA,EAAA,EAAA,EAAA,EAAA,IAAAS,EAAAC,EAAA,aAAA,GACnEV,MAAwB,EAAA,IAAAA,MAAAA,EAAA,MAAA,EAClBA,EAAKI,EAAAA,EAAAA,EAAUO,IAAuBX,MAAAA,KAAAA,UAAA,SAAA,cAAA,EACtCA,EAAKI,EAAAA,EAAAA,EAAUO,IACrB,MAAMC,KAAA,UAAA,SAAA,cAAWC,EACX,MAAAC,GAAAd,EAAAM,EAAA,EAAU,EAAA,IAAAS,EAA2BC,EAAW,WAAA,GAAAhB,GAAAM,EAAA,EAAA,EAAA,EAAA,IAAA,KAAA,SAAA,SAAA,CAAA,EAAA,OAAA,CAAA,EAAA,SACtDN,EAAW,EAAA,EAAA,EAAA,aAAC,CAAGiB,EAAAA,EAAC,EAAAA,CACd,IAAAH,GAAuCd,IAAAA,GAAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IACjCA,MAAa,EAAM,IAAAA,MAAAA,KAAAA,QAAAkB,IAAA,OAAAlB,IAAAM,EAAA,CAAA,IACRa,YAA+BnB,OAAA,cAAA,KAAA,kBAAA,YACzCA,EAAOmB,EAAAA,EAAAA,EAAAA,IACb,KAAA,OAAAA,CAAA,EAAA,UAAA,GAAAC,CAAA,KAAAH,CAAA,EAAA,CAAAjB,CAAAA,EACKA,EAAKI,EAAAA,EAAAA,EAAUO,IAAYX,MAAAA,KAAAA,UAAA,SAAA,GAAA,EAC3BA,MAAa,EAAM,IAAAA,MAAAA,KAAAA,QAAAkB,IAAA,OACvBlB,EAAM,EAAA,EAAA,CAAA,IAAqDA,MAAAA,GAAAA,IAAA,EAAA,EAAA,KAAAqB,EAAAT,EAAA,cAAA,KAAA,IAAA,YAAAS,EAAA,aAC3DrB,EAAwB,EAAA,EAAA,EAAA,IACzB,KAAA,OAAAmB,CAAA,EAAA,IAAA,KAAAG,CAAA,CAAAtB,CAAAA,EACKA,EAAKI,EAAAA,EAAAA,EAAUO,IACvB,MAAA,KAAA,UAAA,SAAA,cAAA,CACF,CAEF,CAAAX,CAvBQuB,IADLC,EAAA,EAAA"}