{"version":3,"file":"lineMultiFeatures.stories-DE40OYV0.js","sources":["../../src/stories/lineMultiFeatures.stories.ts"],"sourcesContent":["import { Chart, type ChartProps } from './Chart';\n\nimport type { Meta, StoryObj } from '@storybook/web-components';\nimport { expect } from 'storybook/test';\n\ntype Story = StoryObj<ChartProps>;\n\nconst meta = {\n  title: \"Chart\",\n  render: (args) => Chart(args),\n} satisfies Meta<ChartProps>;\n\nexport default meta;\n\nexport const FeaturesChart0: Story = {\n  name: \"Multi-series Line Chart with Legend and No Symbols\",\n  args: {\n    filename: \"manifests/autogen/line-multi/line-multi-manifest-16.json\",\n    forcecharttype: \"line\",\n    config: {\n      'chart.hasDirectLabels': false,\n      'chart.isDrawSymbols': false,\n      'legend.isAlwaysDrawLegend': true\n    }\n  },\n  play: async ({ canvas, userEvent }) => {\n    const parachart = await canvas.findByTestId('para-chart');\n    //await userEvent.click(button);\n    await expect(parachart).toBeInTheDocument();\n  },\n}\n"],"names":["expect","meta","title","render","Chart","args","FeaturesChart0","name","filename","forcecharttype","config","play","canvas","userEvent","parachart","findByTestId","toBeInTheDocument","parameters","docs","source","originalSource"],"mappings":"4GAGA,KAAA,CAAA,OAAAA,CAAuB,EAAA,0BAIjBC,EAAO,CACXC,MAAO,QACPC,OAAkBC,GAAAA,EAAMC,CAAI,CAC9B,EAIaC,EAAwB,CACnCC,KAAM,qDACNF,KAAM,CACJG,SAAU,2DACVC,eAAgB,OAChBC,OAAQ,CACN,wBAAyB,GACzB,sBAAuB,GACvB,4BAA6B,EAAA,CAEjC,EACAC,KAAM,MAAO,CAAEC,OAAAA,EAAQC,UAAAA,CAAAA,IAAgB,CACrC,MAAMC,EAAY,MAAMF,EAAOG,aAAa,YAAY,EAElDf,MAAAA,EAAOc,CAAS,EAAEE,kBAAkB,CAAA,CAE9C,YAAAV,EAAAW,WAAA,CAAA,GAAAX,EAAAW,WAAAC,KAAA,CAAA,IAAAZ,EAAAA,EAAAW,aAAAX,YAAAA,EAAAY,KAAAC,OAAA,CAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAA,IAAAd,GAAAA,EAAAA,EAAAW,aAAAX,YAAAA,EAAAY,OAAAZ,YAAAA,EAAAa,MAAAA,CAAA,CAAA"}