{"version":3,"file":"From Slot.stories-CBPdlwl3.js","sources":["../../src/stories/From Slot.stories.ts"],"sourcesContent":["import {Chart, type ChartProps} from './Chart';\nimport type { Meta, StoryObj } from '@storybook/web-components-vite';\nimport { expect } from 'storybook/test';\n\nimport { html, TemplateResult } from 'lit';\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html.js';\n\n// More on how to set up stories at: https://storybook.js.org/docs/writing-stories\nconst meta = {\n  title: 'Chart',\n  tags: ['autodocs'],\n  render: (args) => Chart(args),\n  argTypes: {\n\n    /*\n    type: {\n      description: 'Type of chart',\n      control: {type: 'select'},\n      options: ['bar', 'line']\n    },\n*/\n    // height: {\n    //     description: \"Height of chart\",\n    //     control: {\n    //         type: \"number\",\n    //         min: 100,\n    //     }\n    // },\n/*\n    summary: {\n      description: 'Accessible summary',\n      control: 'text'\n    },\n\n*/\n/*\n    dataFile: {\n      description: 'File where data is located.',\n      control: 'text'\n    }\n*/\n  }\n} satisfies Meta<ChartProps>;\n\nexport default meta;\ntype Story = StoryObj<ChartProps>;\n\n// More on writing stories with args: https://storybook.js.org/docs/writing-stories/args\nexport const FromSlot: Story = {\n  args: {\n    filename: \"\",\n    forcecharttype: \"pie\",\n    slot: unsafeHTML(`\n          <table>\n          <caption>Division of energy in the Universe (Table)</caption>\n          <thead>\n            <tr>\n              <th>Kind of energy</th>\n              <th>Proportion of total energy in the Universe</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>Dark Energy</td>\n              <td>73%</td>\n            </tr>\n            <tr>\n              <td>Dark Matter</td>\n              <td>23%</td>\n            </tr>\n            <tr>\n              <td>Nonluminous Matter</td>\n              <td>3.6%</td>\n            </tr>\n            <tr>\n              <td>Luminous Matter</td>\n              <td>0.4%</td>\n            </tr>\n          </tbody>\n        </table>\n    `) as TemplateResult\n  },\n  play: async ({ canvas, userEvent }) => {\n    const parachart = await canvas.findByTestId('para-chart');\n    await expect(parachart).toBeInTheDocument();\n  },\n};\n\n\n/*\n{\n  \"datasets\": [\n    {\n      \"type\": \"pie\",\n      \"title\": \"Division of energy in the Universe\",\n      \"facets\": {\n        \"x\": {\n          \"label\": \"Kind of energy\",\n          \"variableType\": \"independent\",\n          \"measure\": \"nominal\",\n          \"datatype\": \"string\"\n        },\n        \"y\": {\n          \"label\": \"Proportion of total energy in the Universe\",\n          \"variableType\": \"dependent\",\n          \"measure\": \"ratio\",\n          \"datatype\": \"number\",\n          \"multiplier\": 0.01\n        }\n      },\n      \"series\": [\n        {\n          \"key\": \"Proportion of total energy in the Universe\",\n          \"theme\": {\n            \"baseQuantity\": \"energy\",\n            \"baseKind\": \"proportion\",\n            \"entity\": \"the Universe\",\n            \"aggregate\": \"total\"\n          },\n          \"records\": [\n            {\n              \"x\": \"Dark Energy\",\n              \"y\": \"73\"\n            },\n            {\n              \"x\": \"Dark Matter\",\n              \"y\": \"23\"\n            },\n            {\n              \"x\": \"Nonluminous Matter\",\n              \"y\": \"3.6\"\n            },\n            {\n              \"x\": \"Luminous Matter\",\n              \"y\": \"0.4\"\n            }\n          ]\n        }\n      ],\n      \"data\": {\n        \"source\": \"inline\"\n      },\n      \"settings\": {\n        \"sonification.isEnabled\": true\n      }\n    }\n  ]\n}  \n*/"],"names":["expect","meta","title","tags","render","Chart","args","argTypes","FromSlot","filename","forcecharttype","slot","unsafeHTML","play","canvas","userEvent","parachart","findByTestId","toBeInTheDocument","parameters","docs","source","originalSource"],"mappings":"mHAEA,KAAA,CAAA,OAAAA,CAAuB,EAAA,0BAMjBC,EAAO,CACXC,MAAO,QACPC,KAAM,CAAC,UAAU,EACjBC,OAAkBC,GAAAA,EAAMC,CAAI,EAC5BC,SAAU,CAAA,CA8BZ,EAMaC,EAAkB,CAC7BF,KAAM,CACJG,SAAU,GACVC,eAAgB,MAChBC,KAAMC,EAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA4BhB,CACH,EACAC,KAAM,MAAO,CAAEC,OAAAA,EAAQC,UAAAA,CAAAA,IAAgB,CACrC,MAAMC,EAAY,MAAMF,EAAOG,aAAa,YAAY,EAClDjB,MAAAA,EAAOgB,CAAS,EAAEE,kBAAkB,CAAA,CAE9C,YAGAV,EAAAW,WAAA,CAAA,GAAAX,EAAAW,WAAAC,KAAA,CAAA,IAAAZ,EAAAA,EAAAW,aAAAX,YAAAA,EAAAY,KAAAC,OAAA,CAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAA,IAAAd,GAAAA,EAAAA,EAAAW,aAAAX,YAAAA,EAAAY,OAAAZ,YAAAA,EAAAa,MAAAA,CAAA,CAAA"}